{"ast":null,"code":"import _objectSpread from \"/home/igor/www/roommates-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/home/igor/www/roommates-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { createPathComponent } from '@react-leaflet/core';\nimport { Polyline as LeafletPolyline } from 'leaflet';\nexport var Polyline = createPathComponent(function createPolyline(_ref, ctx) {\n  var positions = _ref.positions,\n      options = _objectWithoutProperties(_ref, [\"positions\"]);\n\n  var instance = new LeafletPolyline(positions, options);\n  return {\n    instance: instance,\n    context: _objectSpread(_objectSpread({}, ctx), {}, {\n      overlayContainer: instance\n    })\n  };\n}, function updatePolyline(layer, props, prevProps) {\n  if (props.positions !== prevProps.positions) {\n    layer.setLatLngs(props.positions);\n  }\n});","map":{"version":3,"sources":["/home/igor/www/roommates-web/node_modules/react-leaflet/esm/Polyline.js"],"names":["createPathComponent","Polyline","LeafletPolyline","createPolyline","ctx","positions","options","instance","context","overlayContainer","updatePolyline","layer","props","prevProps","setLatLngs"],"mappings":";;AAAA,SAASA,mBAAT,QAAoC,qBAApC;AACA,SAASC,QAAQ,IAAIC,eAArB,QAA4C,SAA5C;AACA,OAAO,IAAMD,QAAQ,GAAGD,mBAAmB,CAAC,SAASG,cAAT,OAGzCC,GAHyC,EAGpC;AAAA,MAFNC,SAEM,QAFNA,SAEM;AAAA,MADHC,OACG;;AACN,MAAMC,QAAQ,GAAG,IAAIL,eAAJ,CAAoBG,SAApB,EAA+BC,OAA/B,CAAjB;AACA,SAAO;AACLC,IAAAA,QAAQ,EAARA,QADK;AAELC,IAAAA,OAAO,kCAAOJ,GAAP;AACLK,MAAAA,gBAAgB,EAAEF;AADb;AAFF,GAAP;AAMD,CAX0C,EAWxC,SAASG,cAAT,CAAwBC,KAAxB,EAA+BC,KAA/B,EAAsCC,SAAtC,EAAiD;AAClD,MAAID,KAAK,CAACP,SAAN,KAAoBQ,SAAS,CAACR,SAAlC,EAA6C;AAC3CM,IAAAA,KAAK,CAACG,UAAN,CAAiBF,KAAK,CAACP,SAAvB;AACD;AACF,CAf0C,CAApC","sourcesContent":["import { createPathComponent } from '@react-leaflet/core';\nimport { Polyline as LeafletPolyline } from 'leaflet';\nexport const Polyline = createPathComponent(function createPolyline({\n  positions,\n  ...options\n}, ctx) {\n  const instance = new LeafletPolyline(positions, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updatePolyline(layer, props, prevProps) {\n  if (props.positions !== prevProps.positions) {\n    layer.setLatLngs(props.positions);\n  }\n});"]},"metadata":{},"sourceType":"module"}