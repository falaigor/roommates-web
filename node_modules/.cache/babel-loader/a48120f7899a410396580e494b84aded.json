{"ast":null,"code":"import _slicedToArray from \"/home/igor/www/roommates-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/home/igor/www/roommates-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/home/igor/www/roommates-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { LeafletProvider, createContainerComponent, createControlHook, createElementHook, useLeafletContext } from '@react-leaflet/core';\nimport { Control } from 'leaflet';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nexport var useLayersControlElement = createElementHook(function createLayersControl(_ref, ctx) {\n  var _c = _ref.children,\n      options = _objectWithoutProperties(_ref, [\"children\"]);\n\n  var instance = new Control.Layers(undefined, undefined, options);\n  return {\n    instance: instance,\n    context: _objectSpread(_objectSpread({}, ctx), {}, {\n      layersControl: instance\n    })\n  };\n}, function updateLayersControl(control, props, prevProps) {\n  if (props.collapsed !== prevProps.collapsed) {\n    if (props.collapsed === true) {\n      control.collapse();\n    } else {\n      control.expand();\n    }\n  }\n});\nexport var useLayersControl = createControlHook(useLayersControlElement); // @ts-ignore\n\nexport var LayersControl = createContainerComponent(useLayersControl);\nexport function createControlledLayer(addLayerToControl) {\n  return function ControlledLayer(props) {\n    var parentContext = useLeafletContext();\n    var propsRef = useRef(props);\n\n    var _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        layer = _useState2[0],\n        setLayer = _useState2[1];\n\n    var layersControl = parentContext.layersControl,\n        map = parentContext.map;\n    var addLayer = useCallback(function (layerToAdd) {\n      if (layersControl != null) {\n        if (propsRef.current.checked) {\n          map.addLayer(layerToAdd);\n        }\n\n        addLayerToControl(layersControl, layerToAdd, propsRef.current.name);\n        setLayer(layerToAdd);\n      }\n    }, [layersControl, map]);\n    var removeLayer = useCallback(function (layerToRemove) {\n      layersControl == null ? void 0 : layersControl.removeLayer(layerToRemove);\n      setLayer(null);\n    }, [layersControl]);\n    var context = useMemo(function () {\n      return _objectSpread(_objectSpread({}, parentContext), {}, {\n        layerContainer: {\n          addLayer: addLayer,\n          removeLayer: removeLayer\n        }\n      });\n    }, [parentContext, addLayer, removeLayer]);\n    useEffect(function () {\n      if (layer !== null && propsRef.current !== props) {\n        if (props.checked === true && (propsRef.current.checked == null || propsRef.current.checked === false)) {\n          map.addLayer(layer);\n        } else if (propsRef.current.checked === true && (props.checked == null || props.checked === false)) {\n          map.removeLayer(layer);\n        }\n\n        propsRef.current = props;\n      }\n    });\n    return props.children ? /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children) : null;\n  };\n}\nLayersControl.BaseLayer = createControlledLayer(function addBaseLayer(layersControl, layer, name) {\n  layersControl.addBaseLayer(layer, name);\n});\nLayersControl.Overlay = createControlledLayer(function addOverlay(layersControl, layer, name) {\n  layersControl.addOverlay(layer, name);\n});","map":{"version":3,"sources":["/home/igor/www/roommates-web/node_modules/react-leaflet/esm/LayersControl.js"],"names":["LeafletProvider","createContainerComponent","createControlHook","createElementHook","useLeafletContext","Control","React","useCallback","useEffect","useMemo","useRef","useState","useLayersControlElement","createLayersControl","ctx","_c","children","options","instance","Layers","undefined","context","layersControl","updateLayersControl","control","props","prevProps","collapsed","collapse","expand","useLayersControl","LayersControl","createControlledLayer","addLayerToControl","ControlledLayer","parentContext","propsRef","layer","setLayer","map","addLayer","layerToAdd","current","checked","name","removeLayer","layerToRemove","layerContainer","createElement","value","BaseLayer","addBaseLayer","Overlay","addOverlay"],"mappings":"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","sourcesContent":["import { LeafletProvider, createContainerComponent, createControlHook, createElementHook, useLeafletContext } from '@react-leaflet/core';\nimport { Control } from 'leaflet';\nimport React, { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nexport const useLayersControlElement = createElementHook(function createLayersControl({\n  children: _c,\n  ...options\n}, ctx) {\n  const instance = new Control.Layers(undefined, undefined, options);\n  return {\n    instance,\n    context: { ...ctx,\n      layersControl: instance\n    }\n  };\n}, function updateLayersControl(control, props, prevProps) {\n  if (props.collapsed !== prevProps.collapsed) {\n    if (props.collapsed === true) {\n      control.collapse();\n    } else {\n      control.expand();\n    }\n  }\n});\nexport const useLayersControl = createControlHook(useLayersControlElement);\n// @ts-ignore\nexport const LayersControl = createContainerComponent(useLayersControl);\nexport function createControlledLayer(addLayerToControl) {\n  return function ControlledLayer(props) {\n    const parentContext = useLeafletContext();\n    const propsRef = useRef(props);\n    const [layer, setLayer] = useState(null);\n    const {\n      layersControl,\n      map\n    } = parentContext;\n    const addLayer = useCallback(layerToAdd => {\n      if (layersControl != null) {\n        if (propsRef.current.checked) {\n          map.addLayer(layerToAdd);\n        }\n\n        addLayerToControl(layersControl, layerToAdd, propsRef.current.name);\n        setLayer(layerToAdd);\n      }\n    }, [layersControl, map]);\n    const removeLayer = useCallback(layerToRemove => {\n      layersControl == null ? void 0 : layersControl.removeLayer(layerToRemove);\n      setLayer(null);\n    }, [layersControl]);\n    const context = useMemo(() => ({ ...parentContext,\n      layerContainer: {\n        addLayer,\n        removeLayer\n      }\n    }), [parentContext, addLayer, removeLayer]);\n    useEffect(() => {\n      if (layer !== null && propsRef.current !== props) {\n        if (props.checked === true && (propsRef.current.checked == null || propsRef.current.checked === false)) {\n          map.addLayer(layer);\n        } else if (propsRef.current.checked === true && (props.checked == null || props.checked === false)) {\n          map.removeLayer(layer);\n        }\n\n        propsRef.current = props;\n      }\n    });\n    return props.children ? /*#__PURE__*/React.createElement(LeafletProvider, {\n      value: context\n    }, props.children) : null;\n  };\n}\nLayersControl.BaseLayer = createControlledLayer(function addBaseLayer(layersControl, layer, name) {\n  layersControl.addBaseLayer(layer, name);\n});\nLayersControl.Overlay = createControlledLayer(function addOverlay(layersControl, layer, name) {\n  layersControl.addOverlay(layer, name);\n});"]},"metadata":{},"sourceType":"module"}