{"ast":null,"code":"import _objectSpread from \"/home/igor/www/roommates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/home/igor/www/roommates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/igor/www/roommates/src/components/Input/CurrencyInput.js\",\n    _this = this;\n\nimport MaskedInput from \"react-text-mask\";\nimport createNumberMask from \"text-mask-addons/dist/createNumberMask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar defaultMaskOptions = {\n  prefix: \"R$\",\n  suffix: \"\",\n  includeThousandsSeparator: true,\n  thousandsSeparatorSymbol: \",\",\n  allowDecimal: true,\n  decimalSymbol: \".\",\n  decimalLimit: 2,\n  // how many digits allowed after the decimal\n  integerLimit: 7,\n  // limit length of integer numbers\n  allowNegative: false,\n  allowLeadingZeroes: false\n};\nexport var CurrencyInput = function CurrencyInput(_ref) {\n  var maskOptions = _ref.maskOptions,\n      inputProps = _objectWithoutProperties(_ref, [\"maskOptions\"]);\n\n  var currencyMask = createNumberMask(_objectSpread(_objectSpread({}, defaultMaskOptions), maskOptions));\n  return /*#__PURE__*/_jsxDEV(MaskedInput, _objectSpread({\n    mask: currencyMask\n  }, inputProps), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, _this);\n};\n_c = CurrencyInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrencyInput\");","map":{"version":3,"sources":["/home/igor/www/roommates/src/components/Input/CurrencyInput.js"],"names":["MaskedInput","createNumberMask","defaultMaskOptions","prefix","suffix","includeThousandsSeparator","thousandsSeparatorSymbol","allowDecimal","decimalSymbol","decimalLimit","integerLimit","allowNegative","allowLeadingZeroes","CurrencyInput","maskOptions","inputProps","currencyMask"],"mappings":";;;;;;AAAA,OAAOA,WAAP,MAAwB,iBAAxB;AACA,OAAOC,gBAAP,MAA6B,wCAA7B;;AAEA,IAAMC,kBAAkB,GAAG;AACzBC,EAAAA,MAAM,EAAE,IADiB;AAEzBC,EAAAA,MAAM,EAAE,EAFiB;AAGzBC,EAAAA,yBAAyB,EAAE,IAHF;AAIzBC,EAAAA,wBAAwB,EAAE,GAJD;AAKzBC,EAAAA,YAAY,EAAE,IALW;AAMzBC,EAAAA,aAAa,EAAE,GANU;AAOzBC,EAAAA,YAAY,EAAE,CAPW;AAOR;AACjBC,EAAAA,YAAY,EAAE,CARW;AAQR;AACjBC,EAAAA,aAAa,EAAE,KATU;AAUzBC,EAAAA,kBAAkB,EAAE;AAVK,CAA3B;AAaA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAoC;AAAA,MAAjCC,WAAiC,QAAjCA,WAAiC;AAAA,MAAjBC,UAAiB;;AAC/D,MAAMC,YAAY,GAAGf,gBAAgB,iCAChCC,kBADgC,GAEhCY,WAFgC,EAArC;AAKA,sBAAO,QAAC,WAAD;AAAa,IAAA,IAAI,EAAEE;AAAnB,KAAqCD,UAArC;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAPM;KAAMF,a","sourcesContent":["import MaskedInput from \"react-text-mask\";\nimport createNumberMask from \"text-mask-addons/dist/createNumberMask\";\n\nconst defaultMaskOptions = {\n  prefix: \"R$\",\n  suffix: \"\",\n  includeThousandsSeparator: true,\n  thousandsSeparatorSymbol: \",\",\n  allowDecimal: true,\n  decimalSymbol: \".\",\n  decimalLimit: 2, // how many digits allowed after the decimal\n  integerLimit: 7, // limit length of integer numbers\n  allowNegative: false,\n  allowLeadingZeroes: false,\n};\n\nexport const CurrencyInput = ({ maskOptions, ...inputProps }) => {\n  const currencyMask = createNumberMask({\n    ...defaultMaskOptions,\n    ...maskOptions,\n  });\n\n  return <MaskedInput mask={currencyMask} {...inputProps} />;\n};\n"]},"metadata":{},"sourceType":"module"}