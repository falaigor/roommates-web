{"ast":null,"code":"import _objectSpread from \"/home/igor/www/roommates-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/home/igor/www/roommates-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { createPathComponent } from '@react-leaflet/core';\nimport { Rectangle as LeafletRectangle } from 'leaflet';\nexport var Rectangle = createPathComponent(function createRectangle(_ref, ctx) {\n  var bounds = _ref.bounds,\n      options = _objectWithoutProperties(_ref, [\"bounds\"]);\n\n  var instance = new LeafletRectangle(bounds, options);\n  return {\n    instance: instance,\n    context: _objectSpread(_objectSpread({}, ctx), {}, {\n      overlayContainer: instance\n    })\n  };\n}, function updateRectangle(layer, props, prevProps) {\n  if (props.bounds !== prevProps.bounds) {\n    layer.setBounds(props.bounds);\n  }\n});","map":{"version":3,"sources":["/home/igor/www/roommates-web/node_modules/react-leaflet/esm/Rectangle.js"],"names":["createPathComponent","Rectangle","LeafletRectangle","createRectangle","ctx","bounds","options","instance","context","overlayContainer","updateRectangle","layer","props","prevProps","setBounds"],"mappings":";;AAAA,SAASA,mBAAT,QAAoC,qBAApC;AACA,SAASC,SAAS,IAAIC,gBAAtB,QAA8C,SAA9C;AACA,OAAO,IAAMD,SAAS,GAAGD,mBAAmB,CAAC,SAASG,eAAT,OAG1CC,GAH0C,EAGrC;AAAA,MAFNC,MAEM,QAFNA,MAEM;AAAA,MADHC,OACG;;AACN,MAAMC,QAAQ,GAAG,IAAIL,gBAAJ,CAAqBG,MAArB,EAA6BC,OAA7B,CAAjB;AACA,SAAO;AACLC,IAAAA,QAAQ,EAARA,QADK;AAELC,IAAAA,OAAO,kCAAOJ,GAAP;AACLK,MAAAA,gBAAgB,EAAEF;AADb;AAFF,GAAP;AAMD,CAX2C,EAWzC,SAASG,eAAT,CAAyBC,KAAzB,EAAgCC,KAAhC,EAAuCC,SAAvC,EAAkD;AACnD,MAAID,KAAK,CAACP,MAAN,KAAiBQ,SAAS,CAACR,MAA/B,EAAuC;AACrCM,IAAAA,KAAK,CAACG,SAAN,CAAgBF,KAAK,CAACP,MAAtB;AACD;AACF,CAf2C,CAArC","sourcesContent":["import { createPathComponent } from '@react-leaflet/core';\nimport { Rectangle as LeafletRectangle } from 'leaflet';\nexport const Rectangle = createPathComponent(function createRectangle({\n  bounds,\n  ...options\n}, ctx) {\n  const instance = new LeafletRectangle(bounds, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateRectangle(layer, props, prevProps) {\n  if (props.bounds !== prevProps.bounds) {\n    layer.setBounds(props.bounds);\n  }\n});"]},"metadata":{},"sourceType":"module"}