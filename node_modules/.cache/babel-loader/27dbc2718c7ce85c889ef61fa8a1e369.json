{"ast":null,"code":"import _objectSpread from \"/home/igor/www/roommates-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"/home/igor/www/roommates-web/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { createLayerComponent } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport var Marker = createLayerComponent(function createMarker(_ref, ctx) {\n  var position = _ref.position,\n      options = _objectWithoutProperties(_ref, [\"position\"]);\n\n  var instance = new LeafletMarker(position, options);\n  return {\n    instance: instance,\n    context: _objectSpread(_objectSpread({}, ctx), {}, {\n      overlayContainer: instance\n    })\n  };\n}, function updateMarker(marker, props, prevProps) {\n  if (props.position !== prevProps.position) {\n    marker.setLatLng(props.position);\n  }\n\n  if (props.icon != null && props.icon !== prevProps.icon) {\n    marker.setIcon(props.icon);\n  }\n\n  if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n    marker.setZIndexOffset(props.zIndexOffset);\n  }\n\n  if (props.opacity != null && props.opacity !== prevProps.opacity) {\n    marker.setOpacity(props.opacity);\n  }\n\n  if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n    if (props.draggable === true) {\n      marker.dragging.enable();\n    } else {\n      marker.dragging.disable();\n    }\n  }\n});","map":{"version":3,"sources":["/home/igor/www/roommates-web/node_modules/react-leaflet/esm/Marker.js"],"names":["createLayerComponent","Marker","LeafletMarker","createMarker","ctx","position","options","instance","context","overlayContainer","updateMarker","marker","props","prevProps","setLatLng","icon","setIcon","zIndexOffset","setZIndexOffset","opacity","setOpacity","dragging","draggable","enable","disable"],"mappings":";;AAAA,SAASA,oBAAT,QAAqC,qBAArC;AACA,SAASC,MAAM,IAAIC,aAAnB,QAAwC,SAAxC;AACA,OAAO,IAAMD,MAAM,GAAGD,oBAAoB,CAAC,SAASG,YAAT,OAGxCC,GAHwC,EAGnC;AAAA,MAFNC,QAEM,QAFNA,QAEM;AAAA,MADHC,OACG;;AACN,MAAMC,QAAQ,GAAG,IAAIL,aAAJ,CAAkBG,QAAlB,EAA4BC,OAA5B,CAAjB;AACA,SAAO;AACLC,IAAAA,QAAQ,EAARA,QADK;AAELC,IAAAA,OAAO,kCAAOJ,GAAP;AACLK,MAAAA,gBAAgB,EAAEF;AADb;AAFF,GAAP;AAMD,CAXyC,EAWvC,SAASG,YAAT,CAAsBC,MAAtB,EAA8BC,KAA9B,EAAqCC,SAArC,EAAgD;AACjD,MAAID,KAAK,CAACP,QAAN,KAAmBQ,SAAS,CAACR,QAAjC,EAA2C;AACzCM,IAAAA,MAAM,CAACG,SAAP,CAAiBF,KAAK,CAACP,QAAvB;AACD;;AAED,MAAIO,KAAK,CAACG,IAAN,IAAc,IAAd,IAAsBH,KAAK,CAACG,IAAN,KAAeF,SAAS,CAACE,IAAnD,EAAyD;AACvDJ,IAAAA,MAAM,CAACK,OAAP,CAAeJ,KAAK,CAACG,IAArB;AACD;;AAED,MAAIH,KAAK,CAACK,YAAN,IAAsB,IAAtB,IAA8BL,KAAK,CAACK,YAAN,KAAuBJ,SAAS,CAACI,YAAnE,EAAiF;AAC/EN,IAAAA,MAAM,CAACO,eAAP,CAAuBN,KAAK,CAACK,YAA7B;AACD;;AAED,MAAIL,KAAK,CAACO,OAAN,IAAiB,IAAjB,IAAyBP,KAAK,CAACO,OAAN,KAAkBN,SAAS,CAACM,OAAzD,EAAkE;AAChER,IAAAA,MAAM,CAACS,UAAP,CAAkBR,KAAK,CAACO,OAAxB;AACD;;AAED,MAAIR,MAAM,CAACU,QAAP,IAAmB,IAAnB,IAA2BT,KAAK,CAACU,SAAN,KAAoBT,SAAS,CAACS,SAA7D,EAAwE;AACtE,QAAIV,KAAK,CAACU,SAAN,KAAoB,IAAxB,EAA8B;AAC5BX,MAAAA,MAAM,CAACU,QAAP,CAAgBE,MAAhB;AACD,KAFD,MAEO;AACLZ,MAAAA,MAAM,CAACU,QAAP,CAAgBG,OAAhB;AACD;AACF;AACF,CAnCyC,CAAnC","sourcesContent":["import { createLayerComponent } from '@react-leaflet/core';\nimport { Marker as LeafletMarker } from 'leaflet';\nexport const Marker = createLayerComponent(function createMarker({\n  position,\n  ...options\n}, ctx) {\n  const instance = new LeafletMarker(position, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateMarker(marker, props, prevProps) {\n  if (props.position !== prevProps.position) {\n    marker.setLatLng(props.position);\n  }\n\n  if (props.icon != null && props.icon !== prevProps.icon) {\n    marker.setIcon(props.icon);\n  }\n\n  if (props.zIndexOffset != null && props.zIndexOffset !== prevProps.zIndexOffset) {\n    marker.setZIndexOffset(props.zIndexOffset);\n  }\n\n  if (props.opacity != null && props.opacity !== prevProps.opacity) {\n    marker.setOpacity(props.opacity);\n  }\n\n  if (marker.dragging != null && props.draggable !== prevProps.draggable) {\n    if (props.draggable === true) {\n      marker.dragging.enable();\n    } else {\n      marker.dragging.disable();\n    }\n  }\n});"]},"metadata":{},"sourceType":"module"}