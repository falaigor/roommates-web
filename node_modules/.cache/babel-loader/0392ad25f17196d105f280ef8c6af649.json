{"ast":null,"code":"import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    var _context$layerContain;\n\n    var container = (_context$layerContain = context.layerContainer) != null ? _context$layerContain : context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      container.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    var context = useLeafletContext();\n    var elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","map":{"version":3,"sources":["/home/igor/www/roommates-web/node_modules/@react-leaflet/core/esm/layer.js"],"names":["useEffect","useAttribution","useLeafletContext","useEventHandlers","withPane","useLayerLifecycle","element","context","addLayer","_context$layerContain","container","layerContainer","map","instance","removeLayer","createLayerHook","useElement","useLayer","props","elementRef","attribution","current","eventHandlers"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,iBAAT,QAAkC,WAAlC;AACA,SAASC,gBAAT,QAAiC,UAAjC;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,OAAO,SAASC,iBAAT,CAA2BC,OAA3B,EAAoCC,OAApC,EAA6C;AAClDP,EAAAA,SAAS,CAAC,SAASQ,QAAT,GAAoB;AAC5B,QAAIC,qBAAJ;;AAEA,QAAMC,SAAS,GAAG,CAACD,qBAAqB,GAAGF,OAAO,CAACI,cAAjC,KAAoD,IAApD,GAA2DF,qBAA3D,GAAmFF,OAAO,CAACK,GAA7G;AACAF,IAAAA,SAAS,CAACF,QAAV,CAAmBF,OAAO,CAACO,QAA3B;AACA,WAAO,SAASC,WAAT,GAAuB;AAC5BJ,MAAAA,SAAS,CAACI,WAAV,CAAsBR,OAAO,CAACO,QAA9B;AACD,KAFD;AAGD,GARQ,EAQN,CAACN,OAAD,EAAUD,OAAV,CARM,CAAT;AASD;AACD,OAAO,SAASS,eAAT,CAAyBC,UAAzB,EAAqC;AAC1C,SAAO,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAC9B,QAAMX,OAAO,GAAGL,iBAAiB,EAAjC;AACA,QAAMiB,UAAU,GAAGH,UAAU,CAACZ,QAAQ,CAACc,KAAD,EAAQX,OAAR,CAAT,EAA2BA,OAA3B,CAA7B;AACAN,IAAAA,cAAc,CAACM,OAAO,CAACK,GAAT,EAAcM,KAAK,CAACE,WAApB,CAAd;AACAjB,IAAAA,gBAAgB,CAACgB,UAAU,CAACE,OAAZ,EAAqBH,KAAK,CAACI,aAA3B,CAAhB;AACAjB,IAAAA,iBAAiB,CAACc,UAAU,CAACE,OAAZ,EAAqBd,OAArB,CAAjB;AACA,WAAOY,UAAP;AACD,GAPD;AAQD","sourcesContent":["import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    var _context$layerContain;\n\n    const container = (_context$layerContain = context.layerContainer) != null ? _context$layerContain : context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      container.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}"]},"metadata":{},"sourceType":"module"}