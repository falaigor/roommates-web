{"ast":null,"code":"import _regeneratorRuntime from \"/home/igor/www/roommates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/igor/www/roommates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/igor/www/roommates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/igor/www/roommates/src/components/RoommateCreate/index.tsx\",\n    _this = this,\n    _s2 = $RefreshSig$();\n\nimport L from \"leaflet\";\nimport { useState } from \"react\";\nimport { MapContainer, TileLayer, useMapEvents } from \"react-leaflet\";\nimport icon from \"../../utils/constants\";\nimport { FiPlus } from \"react-icons/fi\";\nimport { CurrencyInput, Input, Textarea } from \"../Input\";\nimport * as S from \"./styles\";\nimport api from \"../../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var RoommateCreate = function RoommateCreate() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  var _useState = useState({\n    latitude: -22.199547,\n    longitude: -47.3804479\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      position = _useState2[0],\n      setPosition = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      title = _useState4[0],\n      setTitle = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      description = _useState6[0],\n      setDescription = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      price = _useState8[0],\n      setPrice = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      images = _useState10[0],\n      setImages = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      previewImages = _useState12[0],\n      setPreviewImages = _useState12[1];\n\n  function handleSelectImages(event) {\n    if (!event.target.files) {\n      return;\n    }\n\n    var selectedImages = Array.from(event.target.files);\n    setImages(selectedImages);\n    var selectedImagesPreview = selectedImages.map(function (image) {\n      return URL.createObjectURL(image);\n    });\n    setPreviewImages(selectedImagesPreview);\n  }\n\n  function MarkerMap() {\n    _s();\n\n    var map = useMapEvents({\n      click: function click(e) {\n        var _e$latlng = e.latlng,\n            lat = _e$latlng.lat,\n            lng = _e$latlng.lng;\n        setPosition({\n          latitude: lat,\n          longitude: lng\n        });\n        L.marker([lat, lng], {\n          icon: icon\n        }).addTo(map);\n      }\n    });\n    return null;\n  }\n\n  _s(MarkerMap, \"D2AvXN8Rt/r3DPix6IJfcPGmgF0=\", false, function () {\n    return [useMapEvents];\n  });\n\n  function handleSubmit() {\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  function _handleSubmit() {\n    _handleSubmit = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var latitude, longitude, data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              latitude = position.latitude, longitude = position.longitude;\n              data = new FormData();\n              data.append(\"title\", title);\n              data.append(\"description\", description);\n              data.append(\"price\", price);\n              data.append(\"latitude\", String(latitude));\n              data.append(\"longitude\", String(longitude));\n              images.forEach(function (image) {\n                data.append(\"images\", image);\n              });\n              _context.next = 10;\n              return api.post(\"/room\", data);\n\n            case 10:\n              alert(\"Cadastro realizado com sucesso!\");\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n    return _handleSubmit.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(S.Loading, {\n      children: \"Cadastro realizado com sucesso!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(S.RoommatesMapWrapper, {\n      children: /*#__PURE__*/_jsxDEV(S.RoommatesMapContent, {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(S.Rooms, {\n          children: [/*#__PURE__*/_jsxDEV(S.InputBlock, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              children: \"Titulo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Input, {\n              id: \"title\",\n              name: \"title\",\n              value: title,\n              onChange: function onChange(event) {\n                return setTitle(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(S.InputBlock, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"description\",\n              children: \"Descri\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Textarea, {\n              name: \"description\",\n              maxLength: 300,\n              value: description,\n              onChange: function onChange(event) {\n                return setDescription(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(S.InputBlock, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"price\",\n              children: \"Pre\\xE7o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(CurrencyInput, {\n              placeholder: \"R$ 0,00\",\n              type: \"text\",\n              id: \"price\",\n              name: \"price\",\n              value: price,\n              onChange: function onChange(event) {\n                return setPrice(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(S.InputBlock, {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"images\",\n              children: \"Fotos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(S.ImagesContainer, {\n              children: [previewImages.map(function (image) {\n                return /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: image,\n                  alt: title\n                }, image, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 26\n                }, _this);\n              }), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"image[]\",\n                className: \"new-image\",\n                children: /*#__PURE__*/_jsxDEV(FiPlus, {\n                  size: 24,\n                  color: \"#15b6d6\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n              multiple: true,\n              onChange: handleSelectImages,\n              type: \"file\",\n              id: \"image[]\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(S.InputBlock, {\n            children: /*#__PURE__*/_jsxDEV(S.Button, {\n              type: \"submit\",\n              children: \"Cadastrar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(S.Map, {\n          id: \"map\",\n          children: /*#__PURE__*/_jsxDEV(MapContainer, {\n            zoom: 15,\n            center: [position.latitude, position.longitude],\n            style: {\n              width: \"100%\",\n              height: \"100%\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n              url: \"https://api.mapbox.com/styles/v1/mapbox/light-v10/tiles/256/{z}/{x}/{y}@2x?access_token=\".concat(process.env.REACT_APP_MAPBOX_TOKEN)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(MarkerMap, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s2(RoommateCreate, \"NyqmgmersFko49H/j8gltyqylf8=\");\n\n_c = RoommateCreate;\n\nvar _c;\n\n$RefreshReg$(_c, \"RoommateCreate\");","map":{"version":3,"sources":["/home/igor/www/roommates/src/components/RoommateCreate/index.tsx"],"names":["L","useState","MapContainer","TileLayer","useMapEvents","icon","FiPlus","CurrencyInput","Input","Textarea","S","api","RoommateCreate","latitude","longitude","position","setPosition","title","setTitle","description","setDescription","price","setPrice","images","setImages","previewImages","setPreviewImages","handleSelectImages","event","target","files","selectedImages","Array","from","selectedImagesPreview","map","image","URL","createObjectURL","MarkerMap","click","e","latlng","lat","lng","marker","addTo","handleSubmit","data","FormData","append","String","forEach","post","alert","value","width","height","process","env","REACT_APP_MAPBOX_TOKEN"],"mappings":"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","sourcesContent":["import L from \"leaflet\";\nimport { ChangeEvent, FormEvent, useState } from \"react\";\nimport { MapContainer, TileLayer, useMapEvents } from \"react-leaflet\";\n\nimport icon from \"../../utils/constants\";\nimport { FiPlus } from \"react-icons/fi\";\n\nimport { CurrencyInput, Input, Textarea } from \"../Input\";\n\nimport * as S from \"./styles\";\nimport api from \"../../services/api\";\n\nexport const RoommateCreate = () => {\n  const [position, setPosition] = useState({\n    latitude: -22.199547,\n    longitude: -47.3804479,\n  });\n\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [images, setImages] = useState<File[]>([]);\n  const [previewImages, setPreviewImages] = useState<string[]>([]);\n\n  function handleSelectImages(event: ChangeEvent<HTMLInputElement>) {\n    if (!event.target.files) {\n      return;\n    }\n\n    const selectedImages = Array.from(event.target.files);\n\n    setImages(selectedImages);\n\n    const selectedImagesPreview = selectedImages.map((image) => {\n      return URL.createObjectURL(image);\n    });\n\n    setPreviewImages(selectedImagesPreview);\n  }\n\n  function MarkerMap() {\n    const map = useMapEvents({\n      click: (e) => {\n        const { lat, lng } = e.latlng;\n        setPosition({\n          latitude: lat,\n          longitude: lng,\n        });\n        L.marker([lat, lng], { icon }).addTo(map);\n      },\n    });\n    return null;\n  }\n\n  async function handleSubmit() {\n    const { latitude, longitude } = position;\n    const data = new FormData();\n\n    data.append(\"title\", title);\n    data.append(\"description\", description);\n    data.append(\"price\", price);\n    data.append(\"latitude\", String(latitude));\n    data.append(\"longitude\", String(longitude));\n\n    images.forEach((image) => {\n      data.append(\"images\", image);\n    });\n\n    await api.post(\"/room\", data);\n\n    alert(\"Cadastro realizado com sucesso!\");\n  }\n\n  return (\n    <>\n      <S.Loading>Cadastro realizado com sucesso!</S.Loading>\n      <S.RoommatesMapWrapper>\n        <S.RoommatesMapContent onSubmit={handleSubmit}>\n          <S.Rooms>\n            <S.InputBlock>\n              <label htmlFor=\"title\">Titulo</label>\n              <Input\n                id=\"title\"\n                name=\"title\"\n                value={title}\n                onChange={(event) => setTitle(event.target.value)}\n              />\n            </S.InputBlock>\n\n            <S.InputBlock>\n              <label htmlFor=\"description\">Descrição</label>\n              <Textarea\n                name=\"description\"\n                maxLength={300}\n                value={description}\n                onChange={(event) => setDescription(event.target.value)}\n              />\n            </S.InputBlock>\n\n            <S.InputBlock>\n              <label htmlFor=\"price\">Preço</label>\n              <CurrencyInput\n                placeholder=\"R$ 0,00\"\n                type=\"text\"\n                id=\"price\"\n                name=\"price\"\n                value={price}\n                onChange={(event) => setPrice(event.target.value)}\n              />\n            </S.InputBlock>\n\n            <S.InputBlock>\n              <label htmlFor=\"images\">Fotos</label>\n\n              <S.ImagesContainer>\n                {previewImages.map((image) => {\n                  return <img key={image} src={image} alt={title} />;\n                })}\n\n                <label htmlFor=\"image[]\" className=\"new-image\">\n                  <FiPlus size={24} color=\"#15b6d6\" />\n                </label>\n              </S.ImagesContainer>\n              <input\n                multiple\n                onChange={handleSelectImages}\n                type=\"file\"\n                id=\"image[]\"\n              />\n            </S.InputBlock>\n\n            <S.InputBlock>\n              <S.Button type=\"submit\">Cadastrar</S.Button>\n            </S.InputBlock>\n          </S.Rooms>\n\n          <S.Map id=\"map\">\n            <MapContainer\n              zoom={15}\n              center={[position.latitude, position.longitude]}\n              style={{ width: \"100%\", height: \"100%\" }}\n            >\n              <TileLayer\n                url={`https://api.mapbox.com/styles/v1/mapbox/light-v10/tiles/256/{z}/{x}/{y}@2x?access_token=${process.env.REACT_APP_MAPBOX_TOKEN}`}\n              />\n              <MarkerMap />\n            </MapContainer>\n          </S.Map>\n        </S.RoommatesMapContent>\n      </S.RoommatesMapWrapper>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}