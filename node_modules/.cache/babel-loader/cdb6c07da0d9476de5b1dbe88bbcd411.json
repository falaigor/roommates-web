{"ast":null,"code":"import _objectWithoutProperties from \"/home/igor/www/roommates/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/home/igor/www/roommates/src/components/Input/Input.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef } from \"react\";\nimport { useField } from \"@unform/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Input = function Input(_ref) {\n  _s();\n\n  var name = _ref.name,\n      type = _ref.type,\n      label = _ref.label,\n      value = _ref.value,\n      rest = _objectWithoutProperties(_ref, [\"name\", \"type\", \"label\", \"value\"]);\n\n  var inputRef = useRef(null);\n\n  var _useField = useField(name),\n      fieldName = _useField.fieldName,\n      registerField = _useField.registerField,\n      _useField$defaultValu = _useField.defaultValue,\n      defaultValue = _useField$defaultValu === void 0 ? \"\" : _useField$defaultValu,\n      error = _useField.error;\n\n  var defaultInputValue = value || defaultValue;\n  useEffect(function () {\n    registerField({\n      name: fieldName,\n      ref: inputRef,\n      getValue: function getValue(ref) {\n        return ref.current.value;\n      },\n      setValue: function setValue(ref, newValue) {\n        ref.current.value = newValue;\n      },\n      clearValue: function clearValue(ref) {\n        ref.current.value = \"\";\n      }\n    });\n  }, [fieldName, registerField]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: type || \"text\",\n      ref: inputRef,\n      defaultValue: defaultInputValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, _this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: \"#f00\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Input, \"/R2nJ8fynWhrfNTH5TxHf0hGHHg=\", false, function () {\n  return [useField];\n});\n\n_c = Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/home/igor/www/roommates/src/components/Input/Input.tsx"],"names":["useEffect","useRef","useField","Input","name","type","label","value","rest","inputRef","fieldName","registerField","defaultValue","error","defaultInputValue","ref","getValue","current","setValue","newValue","clearValue","color"],"mappings":";;;;;;AAAA,SAA8BA,SAA9B,EAAyCC,MAAzC,QAAuD,OAAvD;AACA,SAASC,QAAT,QAAyB,cAAzB;;AA0BA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,OAAuD;AAAA;;AAAA,MAApDC,IAAoD,QAApDA,IAAoD;AAAA,MAA9CC,IAA8C,QAA9CA,IAA8C;AAAA,MAAxCC,KAAwC,QAAxCA,KAAwC;AAAA,MAAjCC,KAAiC,QAAjCA,KAAiC;AAAA,MAAvBC,IAAuB;;AAC1E,MAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAD,CAAvB;;AAD0E,kBAEXC,QAAQ,CAACE,IAAD,CAFG;AAAA,MAElEM,SAFkE,aAElEA,SAFkE;AAAA,MAEvDC,aAFuD,aAEvDA,aAFuD;AAAA,wCAExCC,YAFwC;AAAA,MAExCA,YAFwC,sCAEzB,EAFyB;AAAA,MAErBC,KAFqB,aAErBA,KAFqB;;AAG1E,MAAMC,iBAAiB,GAAGP,KAAK,IAAIK,YAAnC;AAEAZ,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,aAAa,CAAC;AACZP,MAAAA,IAAI,EAAEM,SADM;AAEZK,MAAAA,GAAG,EAAEN,QAFO;AAGZO,MAAAA,QAAQ,EAAE,kBAACD,GAAD,EAAS;AACjB,eAAOA,GAAG,CAACE,OAAJ,CAAYV,KAAnB;AACD,OALW;AAMZW,MAAAA,QAAQ,EAAE,kBAACH,GAAD,EAAMI,QAAN,EAAmB;AAC3BJ,QAAAA,GAAG,CAACE,OAAJ,CAAYV,KAAZ,GAAoBY,QAApB;AACD,OARW;AASZC,MAAAA,UAAU,EAAE,oBAACL,GAAD,EAAS;AACnBA,QAAAA,GAAG,CAACE,OAAJ,CAAYV,KAAZ,GAAoB,EAApB;AACD;AAXW,KAAD,CAAb;AAaD,GAdQ,EAcN,CAACG,SAAD,EAAYC,aAAZ,CAdM,CAAT;AAgBA,sBACE;AAAA,4BACE;AACE,MAAA,IAAI,EAAEN,IAAI,IAAI,MADhB;AAEE,MAAA,GAAG,EAAEI,QAFP;AAGE,MAAA,YAAY,EAAEK;AAHhB;AAAA;AAAA;AAAA;AAAA,aADF,EAMGD,KAAK,iBAAI;AAAM,MAAA,KAAK,EAAE;AAAEQ,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA,gBAAiCR;AAAjC;AAAA;AAAA;AAAA;AAAA,aANZ;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CA/BM;;GAAMV,K;UAEoDD,Q;;;KAFpDC,K","sourcesContent":["import { InputHTMLAttributes, useEffect, useRef } from \"react\";\nimport { useField } from \"@unform/core\";\n\ninterface Props {\n  name: string;\n  type?:\n    | \"text\"\n    | \"number\"\n    | \"color\"\n    | \"date\"\n    | \"datetime-local\"\n    | \"email\"\n    | \"hidden\"\n    | \"month\"\n    | \"password\"\n    | \"time\"\n    | \"range\"\n    | \"search\"\n    | \"tel\"\n    | \"url\"\n    | \"week\";\n  label?: string;\n  value?: string;\n}\n\ntype InputProps = InputHTMLAttributes<HTMLInputElement> & Props;\n\nexport const Input = ({ name, type, label, value, ...rest }: InputProps) => {\n  const inputRef = useRef(null);\n  const { fieldName, registerField, defaultValue = \"\", error } = useField(name);\n  const defaultInputValue = value || defaultValue;\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef,\n      getValue: (ref) => {\n        return ref.current.value;\n      },\n      setValue: (ref, newValue) => {\n        ref.current.value = newValue;\n      },\n      clearValue: (ref) => {\n        ref.current.value = \"\";\n      },\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <div>\n      <input\n        type={type || \"text\"}\n        ref={inputRef}\n        defaultValue={defaultInputValue}\n      />\n      {error && <span style={{ color: \"#f00\" }}>{error}</span>}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}